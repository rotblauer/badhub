{
    "action": "created",
    "comment": {
        "url": "https://api.github.com/repos/etclabscore/json-schema-to-types/pulls/comments/410377539",
        "pull_request_review_id": 395655240,
        "id": 410377539,
        "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM3NzUzOQ==",
        "diff_hunk": "@@ -133,9 +135,49 @@ export default class Golang extends CodeGen {\n       return [...typings, `\\t${title.padEnd(titleMaxLength)} *${title}`];\n     }, []);\n \n+    const tit = this.getSafeTitle(s.title as string);\n+\n+    // Assuming that AnyOfs are either an {}, or an [];",
        "path": "src/codegens/golang.ts",
        "position": 24,
        "original_position": 24,
        "commit_id": "cb9dc33c8bc7e4cec238170d2648822d6492d171",
        "original_commit_id": "cb9dc33c8bc7e4cec238170d2648822d6492d171",
        "user": {
            "login": "BelfordZ",
            "id": 1787231,
            "node_id": "MDQ6VXNlcjE3ODcyMzE=",
            "avatar_url": "https://avatars0.githubusercontent.com/u/1787231?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BelfordZ",
            "html_url": "https://github.com/BelfordZ",
            "followers_url": "https://api.github.com/users/BelfordZ/followers",
            "following_url": "https://api.github.com/users/BelfordZ/following{/other_user}",
            "gists_url": "https://api.github.com/users/BelfordZ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BelfordZ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BelfordZ/subscriptions",
            "organizations_url": "https://api.github.com/users/BelfordZ/orgs",
            "repos_url": "https://api.github.com/users/BelfordZ/repos",
            "events_url": "https://api.github.com/users/BelfordZ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BelfordZ/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "![image](https://user-images.githubusercontent.com/1787231/79598506-f01c6b00-8098-11ea-8b19-e412a8e3fa59.png)\r\nhttps://json-schema.org/understanding-json-schema/reference/combining.html\r\n\r\nAFAIK anyOf must be an array",
        "created_at": "2020-04-17T17:48:59Z",
        "updated_at": "2020-04-17T17:49:00Z",
        "html_url": "https://github.com/etclabscore/json-schema-to-types/pull/60#discussion_r410377539",
        "pull_request_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/pulls/60",
        "author_association": "MEMBER",
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/etclabscore/json-schema-to-types/pulls/comments/410377539"
            },
            "html": {
                "href": "https://github.com/etclabscore/json-schema-to-types/pull/60#discussion_r410377539"
            },
            "pull_request": {
                "href": "https://api.github.com/repos/etclabscore/json-schema-to-types/pulls/60"
            }
        },
        "start_line": null,
        "original_start_line": null,
        "start_side": null,
        "line": 140,
        "original_line": 140,
        "side": "RIGHT"
    },
    "pull_request": {
        "url": "https://api.github.com/repos/etclabscore/json-schema-to-types/pulls/60",
        "id": 402660026,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDAyNjYwMDI2",
        "html_url": "https://github.com/etclabscore/json-schema-to-types/pull/60",
        "diff_url": "https://github.com/etclabscore/json-schema-to-types/pull/60.diff",
        "patch_url": "https://github.com/etclabscore/json-schema-to-types/pull/60.patch",
        "issue_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/issues/60",
        "number": 60,
        "state": "open",
        "locked": false,
        "title": "Fix/golang AnyOf and OneOf json marshaling",
        "user": {
            "login": "meowsbits",
            "id": 45600330,
            "node_id": "MDQ6VXNlcjQ1NjAwMzMw",
            "avatar_url": "https://avatars1.githubusercontent.com/u/45600330?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/meowsbits",
            "html_url": "https://github.com/meowsbits",
            "followers_url": "https://api.github.com/users/meowsbits/followers",
            "following_url": "https://api.github.com/users/meowsbits/following{/other_user}",
            "gists_url": "https://api.github.com/users/meowsbits/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/meowsbits/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/meowsbits/subscriptions",
            "organizations_url": "https://api.github.com/users/meowsbits/orgs",
            "repos_url": "https://api.github.com/users/meowsbits/repos",
            "events_url": "https://api.github.com/users/meowsbits/events{/privacy}",
            "received_events_url": "https://api.github.com/users/meowsbits/received_events",
            "type": "User",
            "site_admin": false
        },
        "body": "Assumes #59.\r\n\r\n> Without custom json marshaling methods,\r\n> AnyOf types are marshaled incorrectly to json\r\n> because they include all of the anyof fields.\r\n> \r\n> This solution assumes that the AnyOf field\r\n> types will be pointers (and can be checked if nil),\r\n> is assumes that there are TWO AnyOf types,\r\n> and that they are (ordered) a singleton of\r\n> Any type, AND a [] of Any type.\r\n> \r\n> Default json un/marshaling will be used\r\n> for the first single existing field type.\r\n> https://github.com/etclabscore/json-schema-to-types/commit/6bed6ed57cadc933199f660e4e1d770048d9f3e0\r\n\r\n`AnyOf` types will marshal to something like the following, which will be an invalid schema.\r\n\r\n```json\r\n\"type\": {\r\n  \"Any17L18NF5\": null,\r\n  \"UnorderedSetOfAny17L18NF5VWcS9ROi\": null \r\n}\r\n```\r\n\r\nI noticed and fixed this in the context of [`schema.type`](https://json-schema.org/draft/2019-09/json-schema-validation.html#rfc.section.6.1.1) marshaling, and I think my assumptions hold for this case:\r\n\r\n> The value of this keyword MUST be either a string or an array. If it is an array, elements of the array MUST be strings and MUST be unique.\r\n>\r\n> String values MUST be one of the six primitive types (\"null\", \"boolean\", \"object\", \"array\", \"number\", or \"string\"), or \"integer\" which matches any number with a zero fractional part.\r\n> \r\n> An instance validates if and only if the instance is in any of the sets listed for this keyword. \r\n\r\n@BelfordZ Although I'm not sure these assumptions on `AnyOf` are valid for other cases...? Maybe? And pretty sure my code can be improved, please help, ye Typescript barons.\r\n\r\nApplied to the https://github.com/open-rpc/meta-schema `meta_schema.go`, this make code like below. (Check out `JSONSchema.Type` composition).\r\n\r\n```go\r\n\r\ntype Any17L18NF5 interface{}\r\n\r\ntype UnorderedSetOfAny17L18NF5VWcS9ROi []Any17L18NF5\r\n\r\ntype AnyOfAny17L18NF5UnorderedSetOfAny17L18NF5VWcS9ROiRlIv9QVc struct {\r\n\tAny17L18NF5                       *Any17L18NF5\r\n\tUnorderedSetOfAny17L18NF5VWcS9ROi *UnorderedSetOfAny17L18NF5VWcS9ROi\r\n}\r\n\r\nfunc (t *AnyOfAny17L18NF5UnorderedSetOfAny17L18NF5VWcS9ROiRlIv9QVc) MarshalJSON() ([]byte, error) {\r\n  if t.Any17L18NF5 != nil {\r\n    return json.Marshal(t.Any17L18NF5)\r\n  }\r\n  return json.Marshal(t.UnorderedSetOfAny17L18NF5VWcS9ROi)\r\n}\r\n\r\nfunc (t *AnyOfAny17L18NF5UnorderedSetOfAny17L18NF5VWcS9ROiRlIv9QVc) UnmarshalJSON(data []byte) error {\r\n  var first byte\r\n  if len(data) > 1 {\r\n    first = data[0]\r\n  }\r\n  if first == '[' {\r\n    var parsed = UnorderedSetOfAny17L18NF5VWcS9ROi{}\r\n    if err := json.Unmarshal(data, &parsed); err != nil {\r\n      return err\r\n    }\r\n    t.UnorderedSetOfAny17L18NF5VWcS9ROi = &parsed\r\n    return nil\r\n  }\r\n  var single Any17L18NF5\r\n  if err := json.Unmarshal(data, &single); err != nil {\r\n    return err\r\n  }\r\n  t.Any17L18NF5 = &single\r\n  return nil\r\n}\r\n//\r\n// --- Default ---\r\n//\r\n// true\r\ntype JSONSchema struct {\r\n\tId                   *StringVPPt56NS                                            `json:\"$id,omitempty\"`\r\n\tSchema               *StringNQRYvFt5                                            `json:\"$schema,omitempty\"`\r\n\tRef                  *StringVPPt56NS                                            `json:\"$ref,omitempty\"`\r\n\tComment              *StringDoaGddGA                                            `json:\"$comment,omitempty\"`\r\n\tTitle                *StringDoaGddGA                                            `json:\"title,omitempty\"`\r\n\tDescription          *StringDoaGddGA                                            `json:\"description,omitempty\"`\r\n\tDefault              *AnyL9Fw4VUO                                               `json:\"default,omitempty\"`\r\n\tReadOnly             *BooleanG3T6Tn0M                                           `json:\"readOnly,omitempty\"`\r\n\tWriteOnly            *BooleanG3T6Tn0M                                           `json:\"writeOnly,omitempty\"`\r\n\tExamples             *UnorderedSetOfAnyL9Fw4VUO55Bn0VNb                         `json:\"examples,omitempty\"`\r\n\tMultipleOf           *Number0ErlT0It                                            `json:\"multipleOf,omitempty\"`\r\n\tMaximum              *NumberHo1ClIqD                                            `json:\"maximum,omitempty\"`\r\n\tExclusiveMaximum     *NumberHo1ClIqD                                            `json:\"exclusiveMaximum,omitempty\"`\r\n\tMinimum              *NumberHo1ClIqD                                            `json:\"minimum,omitempty\"`\r\n\tExclusiveMinimum     *NumberHo1ClIqD                                            `json:\"exclusiveMinimum,omitempty\"`\r\n\tMaxLength            *Integer7Bd9WOt2                                           `json:\"maxLength,omitempty\"`\r\n\tMinLength            *AllOfAnyXumYU1GWInteger7Bd9WOt20HjcoOji                   `json:\"minLength,omitempty\"`\r\n\tPattern              *String3JBlmrip                                            `json:\"pattern,omitempty\"`\r\n\tAdditionalItems      *JSONSchema                                                `json:\"additionalItems,omitempty\"`\r\n\tItems                *AnyOfJSONSchemaUnorderedSetOfJSONSchemawrpyYBUSSidr3R5Q   `json:\"items,omitempty\"`\r\n\tMaxItems             *Integer7Bd9WOt2                                           `json:\"maxItems,omitempty\"`\r\n\tMinItems             *AllOfAnyXumYU1GWInteger7Bd9WOt20HjcoOji                   `json:\"minItems,omitempty\"`\r\n\tUniqueItems          *BooleanG3T6Tn0M                                           `json:\"uniqueItems,omitempty\"`\r\n\tContains             *JSONSchema                                                `json:\"contains,omitempty\"`\r\n\tMaxProperties        *Integer7Bd9WOt2                                           `json:\"maxProperties,omitempty\"`\r\n\tMinProperties        *AllOfAnyXumYU1GWInteger7Bd9WOt20HjcoOji                   `json:\"minProperties,omitempty\"`\r\n\tRequired             *UnorderedSetOfStringDoaGddGAIEp1G0PF                      `json:\"required,omitempty\"`\r\n\tAdditionalProperties *JSONSchema                                                `json:\"additionalProperties,omitempty\"`\r\n\tDefinitions          *ObjectWrpyYBUS                                            `json:\"definitions,omitempty\"`\r\n\tProperties           *ObjectWrpyYBUS                                            `json:\"properties,omitempty\"`\r\n\tPatternProperties    *ObjectWrpyYBUS                                            `json:\"patternProperties,omitempty\"`\r\n\tDependencies         *ObjectWrpyYBUS                                            `json:\"dependencies,omitempty\"`\r\n\tPropertyNames        *JSONSchema                                                `json:\"propertyNames,omitempty\"`\r\n\tConst                *AnyL9Fw4VUO                                               `json:\"const,omitempty\"`\r\n\tEnum                 *UnorderedSetOfAnyL9Fw4VUOyeAFYsFq                         `json:\"enum,omitempty\"`\r\n\tType                 *AnyOfAny17L18NF5UnorderedSetOfAny17L18NF5VWcS9ROiRlIv9QVc `json:\"type,omitempty\"`\r\n\tFormat               *StringDoaGddGA                                            `json:\"format,omitempty\"`\r\n\tContentMediaType     *StringDoaGddGA                                            `json:\"contentMediaType,omitempty\"`\r\n\tContentEncoding      *StringDoaGddGA                                            `json:\"contentEncoding,omitempty\"`\r\n\tIf                   *JSONSchema                                                `json:\"if,omitempty\"`\r\n\tThen                 *JSONSchema                                                `json:\"then,omitempty\"`\r\n\tElse                 *JSONSchema                                                `json:\"else,omitempty\"`\r\n\tAllOf                *UnorderedSetOfJSONSchemawrpyYBUS                          `json:\"allOf,omitempty\"`\r\n\tAnyOf                *UnorderedSetOfJSONSchemawrpyYBUS                          `json:\"anyOf,omitempty\"`\r\n\tOneOf                *UnorderedSetOfJSONSchemawrpyYBUS                          `json:\"oneOf,omitempty\"`\r\n\tNot                  *JSONSchema                                                `json:\"not,omitempty\"`\r\n}\r\n``` ",
        "created_at": "2020-04-13T14:06:27Z",
        "updated_at": "2020-04-17T17:49:00Z",
        "closed_at": null,
        "merged_at": null,
        "merge_commit_sha": "0954be2e3559ddedc4b6cd09d01df9d37f73d6d9",
        "assignee": null,
        "assignees": [],
        "requested_reviewers": [],
        "requested_teams": [],
        "labels": [],
        "milestone": null,
        "draft": false,
        "commits_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/pulls/60/commits",
        "review_comments_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/pulls/60/comments",
        "review_comment_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/pulls/comments{/number}",
        "comments_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/issues/60/comments",
        "statuses_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/statuses/cb9dc33c8bc7e4cec238170d2648822d6492d171",
        "head": {
            "label": "etclabscore:fix/golang-anyof-json-marshaling",
            "ref": "fix/golang-anyof-json-marshaling",
            "sha": "cb9dc33c8bc7e4cec238170d2648822d6492d171",
            "user": {
                "login": "etclabscore",
                "id": 45863699,
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ1ODYzNjk5",
                "avatar_url": "https://avatars3.githubusercontent.com/u/45863699?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/etclabscore",
                "html_url": "https://github.com/etclabscore",
                "followers_url": "https://api.github.com/users/etclabscore/followers",
                "following_url": "https://api.github.com/users/etclabscore/following{/other_user}",
                "gists_url": "https://api.github.com/users/etclabscore/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/etclabscore/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/etclabscore/subscriptions",
                "organizations_url": "https://api.github.com/users/etclabscore/orgs",
                "repos_url": "https://api.github.com/users/etclabscore/repos",
                "events_url": "https://api.github.com/users/etclabscore/events{/privacy}",
                "received_events_url": "https://api.github.com/users/etclabscore/received_events",
                "type": "Organization",
                "site_admin": false
            },
            "repo": {
                "id": 206211835,
                "node_id": "MDEwOlJlcG9zaXRvcnkyMDYyMTE4MzU=",
                "name": "json-schema-to-types",
                "full_name": "etclabscore/json-schema-to-types",
                "private": false,
                "owner": {
                    "login": "etclabscore",
                    "id": 45863699,
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ1ODYzNjk5",
                    "avatar_url": "https://avatars3.githubusercontent.com/u/45863699?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/etclabscore",
                    "html_url": "https://github.com/etclabscore",
                    "followers_url": "https://api.github.com/users/etclabscore/followers",
                    "following_url": "https://api.github.com/users/etclabscore/following{/other_user}",
                    "gists_url": "https://api.github.com/users/etclabscore/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/etclabscore/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/etclabscore/subscriptions",
                    "organizations_url": "https://api.github.com/users/etclabscore/orgs",
                    "repos_url": "https://api.github.com/users/etclabscore/repos",
                    "events_url": "https://api.github.com/users/etclabscore/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/etclabscore/received_events",
                    "type": "Organization",
                    "site_admin": false
                },
                "html_url": "https://github.com/etclabscore/json-schema-to-types",
                "description": "A tool for converting JSON Schemas into types for various languages",
                "fork": false,
                "url": "https://api.github.com/repos/etclabscore/json-schema-to-types",
                "forks_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/forks",
                "keys_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/teams",
                "hooks_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/hooks",
                "issue_events_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/issues/events{/number}",
                "events_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/events",
                "assignees_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/assignees{/user}",
                "branches_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/branches{/branch}",
                "tags_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/tags",
                "blobs_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/languages",
                "stargazers_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/stargazers",
                "contributors_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/contributors",
                "subscribers_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/subscribers",
                "subscription_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/subscription",
                "commits_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/contents/{+path}",
                "compare_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/merges",
                "archive_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/downloads",
                "issues_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/issues{/number}",
                "pulls_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/labels{/name}",
                "releases_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/releases{/id}",
                "deployments_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/deployments",
                "created_at": "2019-09-04T02:17:49Z",
                "updated_at": "2020-04-14T21:23:22Z",
                "pushed_at": "2020-04-17T17:45:25Z",
                "git_url": "git://github.com/etclabscore/json-schema-to-types.git",
                "ssh_url": "git@github.com:etclabscore/json-schema-to-types.git",
                "clone_url": "https://github.com/etclabscore/json-schema-to-types.git",
                "svn_url": "https://github.com/etclabscore/json-schema-to-types",
                "homepage": "https://etclabscore.github.io/json-schema-to-types/",
                "size": 1285,
                "stargazers_count": 3,
                "watchers_count": 3,
                "language": "TypeScript",
                "has_issues": true,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": true,
                "forks_count": 1,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 19,
                "license": {
                    "key": "apache-2.0",
                    "name": "Apache License 2.0",
                    "spdx_id": "Apache-2.0",
                    "url": "https://api.github.com/licenses/apache-2.0",
                    "node_id": "MDc6TGljZW5zZTI="
                },
                "forks": 1,
                "open_issues": 19,
                "watchers": 3,
                "default_branch": "master"
            }
        },
        "base": {
            "label": "etclabscore:master",
            "ref": "master",
            "sha": "d54fc93f47c4cd93ac30e19379c75151da0f78cc",
            "user": {
                "login": "etclabscore",
                "id": 45863699,
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ1ODYzNjk5",
                "avatar_url": "https://avatars3.githubusercontent.com/u/45863699?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/etclabscore",
                "html_url": "https://github.com/etclabscore",
                "followers_url": "https://api.github.com/users/etclabscore/followers",
                "following_url": "https://api.github.com/users/etclabscore/following{/other_user}",
                "gists_url": "https://api.github.com/users/etclabscore/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/etclabscore/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/etclabscore/subscriptions",
                "organizations_url": "https://api.github.com/users/etclabscore/orgs",
                "repos_url": "https://api.github.com/users/etclabscore/repos",
                "events_url": "https://api.github.com/users/etclabscore/events{/privacy}",
                "received_events_url": "https://api.github.com/users/etclabscore/received_events",
                "type": "Organization",
                "site_admin": false
            },
            "repo": {
                "id": 206211835,
                "node_id": "MDEwOlJlcG9zaXRvcnkyMDYyMTE4MzU=",
                "name": "json-schema-to-types",
                "full_name": "etclabscore/json-schema-to-types",
                "private": false,
                "owner": {
                    "login": "etclabscore",
                    "id": 45863699,
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ1ODYzNjk5",
                    "avatar_url": "https://avatars3.githubusercontent.com/u/45863699?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/etclabscore",
                    "html_url": "https://github.com/etclabscore",
                    "followers_url": "https://api.github.com/users/etclabscore/followers",
                    "following_url": "https://api.github.com/users/etclabscore/following{/other_user}",
                    "gists_url": "https://api.github.com/users/etclabscore/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/etclabscore/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/etclabscore/subscriptions",
                    "organizations_url": "https://api.github.com/users/etclabscore/orgs",
                    "repos_url": "https://api.github.com/users/etclabscore/repos",
                    "events_url": "https://api.github.com/users/etclabscore/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/etclabscore/received_events",
                    "type": "Organization",
                    "site_admin": false
                },
                "html_url": "https://github.com/etclabscore/json-schema-to-types",
                "description": "A tool for converting JSON Schemas into types for various languages",
                "fork": false,
                "url": "https://api.github.com/repos/etclabscore/json-schema-to-types",
                "forks_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/forks",
                "keys_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/teams",
                "hooks_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/hooks",
                "issue_events_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/issues/events{/number}",
                "events_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/events",
                "assignees_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/assignees{/user}",
                "branches_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/branches{/branch}",
                "tags_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/tags",
                "blobs_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/languages",
                "stargazers_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/stargazers",
                "contributors_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/contributors",
                "subscribers_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/subscribers",
                "subscription_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/subscription",
                "commits_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/contents/{+path}",
                "compare_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/merges",
                "archive_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/downloads",
                "issues_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/issues{/number}",
                "pulls_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/labels{/name}",
                "releases_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/releases{/id}",
                "deployments_url": "https://api.github.com/repos/etclabscore/json-schema-to-types/deployments",
                "created_at": "2019-09-04T02:17:49Z",
                "updated_at": "2020-04-14T21:23:22Z",
                "pushed_at": "2020-04-17T17:45:25Z",
                "git_url": "git://github.com/etclabscore/json-schema-to-types.git",
                "ssh_url": "git@github.com:etclabscore/json-schema-to-types.git",
                "clone_url": "https://github.com/etclabscore/json-schema-to-types.git",
                "svn_url": "https://github.com/etclabscore/json-schema-to-types",
                "homepage": "https://etclabscore.github.io/json-schema-to-types/",
                "size": 1285,
                "stargazers_count": 3,
                "watchers_count": 3,
                "language": "TypeScript",
                "has_issues": true,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": true,
                "forks_count": 1,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 19,
                "license": {
                    "key": "apache-2.0",
                    "name": "Apache License 2.0",
                    "spdx_id": "Apache-2.0",
                    "url": "https://api.github.com/licenses/apache-2.0",
                    "node_id": "MDc6TGljZW5zZTI="
                },
                "forks": 1,
                "open_issues": 19,
                "watchers": 3,
                "default_branch": "master"
            }
        },
        "_links": {
            "self": {
                "href": "https://api.github.com/repos/etclabscore/json-schema-to-types/pulls/60"
            },
            "html": {
                "href": "https://github.com/etclabscore/json-schema-to-types/pull/60"
            },
            "issue": {
                "href": "https://api.github.com/repos/etclabscore/json-schema-to-types/issues/60"
            },
            "comments": {
                "href": "https://api.github.com/repos/etclabscore/json-schema-to-types/issues/60/comments"
            },
            "review_comments": {
                "href": "https://api.github.com/repos/etclabscore/json-schema-to-types/pulls/60/comments"
            },
            "review_comment": {
                "href": "https://api.github.com/repos/etclabscore/json-schema-to-types/pulls/comments{/number}"
            },
            "commits": {
                "href": "https://api.github.com/repos/etclabscore/json-schema-to-types/pulls/60/commits"
            },
            "statuses": {
                "href": "https://api.github.com/repos/etclabscore/json-schema-to-types/statuses/cb9dc33c8bc7e4cec238170d2648822d6492d171"
            }
        },
        "author_association": "MEMBER"
    }
}